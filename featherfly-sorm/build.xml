<?xml version="1.0" encoding="UTF-8"?>
<project name="featherfly-sorm" default="publish_clear" basedir="."
	xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:ecf="antlib:cn.featherfly.ecf">

	<!-- 版本名称 -->
	<!--
	<property name="version" value="1" />
	<property name="subVersion" value="3" />
	<property name="reversion" value="2" />
	<property name="pubVersion" value="${version}.${subVersion}.${reversion}" />
	-->
	<property file="gradle.properties"/>
	<!-- 项目名称 -->
	<property name="projectName" value="${archivesBaseName}"/>
	<property name="artifact" value="${archivesBaseName}" />
	
	<property name="Built-By" value="zhongji" />

	<!-- ivy setting -->
	<property name="ivysettings" value="D:/programe/runtime/ivy/settings/ivysettings.xml" />
	<property name="ivyconfig" value="${ivysettings}" />

	<!-- 编译临时目录 -->
	<property name="buildTempDir" location="build_temp" />

	<property name="src" location="${buildTempDir}/src" />
	<property name="bin" location="${buildTempDir}/bin" />
	<property name="docapi" location="${buildTempDir}/docapi" />
	<property name="lib" location="${buildTempDir}/lib" />
	
	<property name="jarFile"
	          value="${projectName}-${version}.jar" />
	<property name="docJarFile"
			          value="${projectName}-${version}-javadoc.jar" />
	<property name="srcJarFile"
				          value="${projectName}-${version}-sources.jar" />

    <property name="ivy.lib.dir" value="${lib}" />

    <!-- paths used for compilation and run  -->
    <path id="classpath">
        <fileset dir="${lib}" includes="**/*.jar"/>
	</path>

	<!-- 删除编译临时目录 -->
	<target name="deleteFold">
		<tstamp />
		<delete dir="${buildTempDir}" />
	</target>

	<!-- 创建web项目放 类文件(.class) 目录 -->
	<target name="createFold" depends="deleteFold">
		<tstamp />
		<mkdir dir="${buildTempDir}" />
		<mkdir dir="${src}" />
		<mkdir dir="${bin}" />
		<mkdir dir="${docapi}" />
		<mkdir dir="${lib}" />
	</target>

	<!-- 复制java原文件和配置文件到临时编译目录 -->
	<target name="copySrcFile" depends="createFold">
		<copy todir="${src}">
			<fileset dir="src">
				<exclude name="**/.svn" />
			</fileset>
		</copy>
	</target>

	<target name="resolve">
		<ivy:configure file="${ivyconfig}"/>
		<ivy:settings id="settings" file="${ivysettings}"/>
		<ivy:resolve file="${ivy.dep.file}" conf ="${ivy.configurations}" revision="${version}"/>
		<ivy:retrieve pattern="${ivy.retrieve.pattern}" conf="${ivy.configurations}"/>
    </target>

	<!-- 编译java原文件 并复制到的相应目录 -->
	<target name="compile" depends="copySrcFile, resolve">
		<tstamp />
		<javac srcdir="${src}" destdir="${bin}" encoding="utf-8">
			<classpath refid="classpath" />
		</javac>
	</target>

	<target name="copyResToBin" depends="compile">
		<copy todir="${bin}">
			<fileset dir="${src}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="jarBin" depends="copyResToBin">
		<jar destfile="${jarFile}" basedir="${bin}">
			<include name="**" />
			<manifest>
				<attribute name="Built-By" value="${Built-By}" />
				<attribute name="Version" value="${version}"/>
			</manifest>
		</jar>
	</target>

	<target name="createJavaDoc" depends="jarBin">
		<!-- destdir是javadoc生成的目录位置 -->
		<javadoc classpathref="classpath" destdir="${docapi}" charset="UTF-8" encoding="UTF-8" docencoding="UTF-8">
			<!-- dir是你的代码位置，记住是java文件的位置而不是class文件的位置哦，第一次用这个命令容易忽略这点 -->
			<packageset dir="${src}">
				<!-- exclude是不想生成哪些类的javadoc -->
				<!--<exclude name="${excludeClasses}" />-->
			</packageset>
			<classpath refid="classpath" />
		</javadoc>
	</target>

	<target name="jarJavaDoc" depends="createJavaDoc">
		<jar destfile="${docJarFile}" basedir="${docapi}">
			<include name="**" />
			<manifest>
				<attribute name="Built-By" value="${Built-By}" />
				<attribute name="Version" value="${version}"/>
			</manifest>
		</jar>
	</target>
	
	<target name="jarSources" depends="jarJavaDoc">
		<copy todir="${src}">
			<fileset dir="${basedir}">
				<include name="change-log.txt"/>
				<include name="common-build.xml"/>
				<include name="ivy.xml"/>
			</fileset>
		</copy>
		<jar destfile="${srcJarFile}" basedir="${src}">
			<include name="**" />
			<manifest>
				<attribute name="Built-By" value="${Built-By}" />
				<attribute name="Version" value="${version}"/>
			</manifest>
		</jar>
	</target>
	
	<target name="publish"
        description="--> Publish share" depends="resolve">
		<ivy:publish resolver="share-publish"
				revision="${version}"
	            update="true"
	            overwrite="true"
				settingsref="settings">
			<artifacts pattern="[artifact]-[revision](-[classifier]).[ext]"/>
            <artifacts pattern="[artifact]-[revision].[ext]"/>
        </ivy:publish>
	</target>

	<!-- 删除编译临时目录 -->
	<target name="clear">
		<tstamp />
		<delete dir="${buildTempDir}" />
		<delete file="${jarFile}" />
		<delete file="${docJarFile}" />
		<delete file="${srcJarFile}" />
		<delete file="${projectName}.pom" />
		<delete file="ivy-${version}.xml" />
		<delete file="ivy-${version}-ivy.xml" />
	</target>
	
	<target name="publish_clear" depends="jarSources,publish,clear">
	</target>
</project>
